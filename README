YURI
====

Wrapper around the standard Elixir URI module to simplify URI manipulation.

Provides Dict-like access to the query string and funtions for accessing
all other parts of the URI.


Usage
=====

    uri = YURI.parse "http://www.example.com/example?a=1"

    #Or with optional Dict of query parameters:
    uri = YURI.parse "http://www.example.com/example?a=1", %{:b => 2, "c" => 3}
    
    to_string uri
    #>> "http://www.example.com/example?a=1&b=2&c=3"

    uri = Dict.put uri, "a", "one"
    uri = Dict.put uri. :b, "two"

    to_string uri
    #>> "http://www.example.com/example?a=one&b=two&c=3"

    uri = YURI.set_path uri, "/new/example"

    to_string uri
    #>> "http://www.example.com/new/example?a=one&b=two&c=3"

    uri["a"]
    #>> "one"

YURI implements the Dict behaviour, all functions in the Dict module can be
used to manipulate the query string. It also implements Access, Enumerable
and Collectable, as well as String.Chars and List.Chars.

Other parts of the URI can be accessed using get_* and set_* functions, e.g.
get_port/2, set_path/2. See the Elixir URI module docs[1] for a complete
list of URI components. The query can not be accessed in this way.


Licence
=======

Copyright Â© 2015 Ookami Kenrou <ookamikenrou@gmail.com>
This work is free. You can redistribute it and/or modify it under the terms of
the Do What The Fuck You Want To Public License, Version 2, as published by
Sam Hocevar. See the LICENSE file or [2] for more details.


[1] http://elixir-lang.org/docs/stable/elixir/
[2] http://www.wtfpl.net/

